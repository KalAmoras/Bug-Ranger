{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K\\\\source\\\\bug-ranger\\\\src\\\\components\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = _ref => {\n  _s();\n  let {\n    issues\n  } = _ref;\n  const severityChartRef = useRef(null);\n  useEffect(() => {\n    // Destroy the previous chart instance when the component unmounts\n    return () => {\n      if (severityChartRef.current && severityChartRef.current.chartInstance) {\n        severityChartRef.current.chartInstance.destroy();\n      }\n    };\n  }, []);\n\n  // Calculate the counts of each severity level\n  const severityCounts = {\n    Minor: 0,\n    Major: 0,\n    Critical: 0\n  };\n  issues.forEach(issue => {\n    if (issue.severity && severityCounts.hasOwnProperty(issue.severity)) {\n      severityCounts[issue.severity]++;\n    }\n  });\n\n  // Create data for the Severity Pie Chart\n  const severityChartData = {\n    labels: Object.keys(severityCounts),\n    datasets: [{\n      data: Object.values(severityCounts),\n      backgroundColor: ['#FFCE56', '#36A2EB', '#FF6384'],\n      hoverBackgroundColor: ['#FFCE56', '#36A2EB', '#FF6384']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Severity Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: severityChartData,\n        ref: severityChartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"75W6Y2MDQC2lMt88gwpXHNNBwuM=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useRef","Pie","jsxDEV","_jsxDEV","Charts","_ref","_s","issues","severityChartRef","current","chartInstance","destroy","severityCounts","Minor","Major","Critical","forEach","issue","severity","hasOwnProperty","severityChartData","labels","Object","keys","datasets","data","values","backgroundColor","hoverBackgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/K/source/bug-ranger/src/components/Charts.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst Charts = ({ issues }) => {\r\n  const severityChartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Destroy the previous chart instance when the component unmounts\r\n    return () => {\r\n      if (severityChartRef.current && severityChartRef.current.chartInstance) {\r\n        severityChartRef.current.chartInstance.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Calculate the counts of each severity level\r\n  const severityCounts = {\r\n    Minor: 0,\r\n    Major: 0,\r\n    Critical: 0,\r\n  };\r\n\r\n  issues.forEach((issue) => {\r\n    if (issue.severity && severityCounts.hasOwnProperty(issue.severity)) {\r\n      severityCounts[issue.severity]++;\r\n    }\r\n  });\r\n\r\n  // Create data for the Severity Pie Chart\r\n  const severityChartData = {\r\n    labels: Object.keys(severityCounts),\r\n    datasets: [\r\n      {\r\n        data: Object.values(severityCounts),\r\n        backgroundColor: ['#FFCE56', '#36A2EB', '#FF6384'],\r\n        hoverBackgroundColor: ['#FFCE56', '#36A2EB', '#FF6384'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>Severity Chart</h2>\r\n        <Pie data={severityChartData} ref={severityChartRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACxB,MAAMG,gBAAgB,GAAGR,MAAM,CAAC,IAAI,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd;IACA,OAAO,MAAM;MACX,IAAIS,gBAAgB,CAACC,OAAO,IAAID,gBAAgB,CAACC,OAAO,CAACC,aAAa,EAAE;QACtEF,gBAAgB,CAACC,OAAO,CAACC,aAAa,CAACC,OAAO,CAAC,CAAC;MAClD;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,cAAc,GAAG;IACrBC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE;EACZ,CAAC;EAEDR,MAAM,CAACS,OAAO,CAAEC,KAAK,IAAK;IACxB,IAAIA,KAAK,CAACC,QAAQ,IAAIN,cAAc,CAACO,cAAc,CAACF,KAAK,CAACC,QAAQ,CAAC,EAAE;MACnEN,cAAc,CAACK,KAAK,CAACC,QAAQ,CAAC,EAAE;IAClC;EACF,CAAC,CAAC;;EAEF;EACA,MAAME,iBAAiB,GAAG;IACxBC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACX,cAAc,CAAC;IACnCY,QAAQ,EAAE,CACR;MACEC,IAAI,EAAEH,MAAM,CAACI,MAAM,CAACd,cAAc,CAAC;MACnCe,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;MAClDC,oBAAoB,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS;IACxD,CAAC;EAEL,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,eACE1B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB9B,OAAA,CAACF,GAAG;QAACwB,IAAI,EAAEL,iBAAkB;QAACc,GAAG,EAAE1B;MAAiB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA7CIF,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AA+CZ,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}