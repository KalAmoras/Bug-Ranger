{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K\\\\source\\\\bug-ranger\\\\src\\\\components\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = ({\n  issuesData\n}) => {\n  _s();\n  const severityChartRef = useRef(null);\n  const [issues, setIssues] = useState({\n    severity: issuesData.severity,\n    priority: issuesData.priority\n  });\n  useEffect(() => {\n    const severityCounts = {\n      Minor: 0,\n      Major: 0,\n      Critical: 0\n    };\n    let svKeys = Object.keys(severityCounts);\n    issues.map(issue => issue[1] === svKeys ? severityCounts[issue.severity]++ : severityCounts);\n    console.log(severityCounts);\n    // if (issue.severity && severityCounts.hasOwnProperty(issue.severity)) {\n\n    // let message\n    // Object.entries(value).map(x=> \n    //   x[1] === \"\" ? message = x[0] : \"\"\n    // )     \n\n    // const editIssue = id =>{\n    //   setIssues(issues.map(issue=> issue.id === id ?\n    //       {...issue, isEditing: !issue.isEditing}: issue))\n    // }\n\n    // const data = {\n    //       labels: Object.keys(severityCounts),\n    //       datasets: [\n    //         {\n    //           data: Object.values(severityCounts),\n    //           backgroundColor: ['#FFCE56', '#36A2EB', '#FF6384'],\n    //           hoverBackgroundColor: ['#FFCE56', '#36A2EB', '#FF6384'],\n    //         },\n    //       ],\n    //     };\n\n    console.log(severityCounts.Critical);\n  }, [issues]);\n\n  // useEffect(() => {\n  //   // Calculate the counts of each severity level\n  //   const severityCounts = {\n  //     Minor: 0,\n  //     Major: 0,\n  //     Critical: 0,\n  //   };\n\n  //   issues.forEach((issue) => {\n  //     if (issue.severity && severityCounts.hasOwnProperty(issue.severity)) {\n  //       severityCounts[issue.severity]++;\n  //     }\n  //   });\n\n  //   // Create data for the Severity Pie Chart\n  //   const data = {\n  //     labels: Object.keys(severityCounts),\n  //     datasets: [\n  //       {\n  //         data: Object.values(severityCounts),\n  //         backgroundColor: ['#FFCE56', '#36A2EB', '#FF6384'],\n  //         hoverBackgroundColor: ['#FFCE56', '#36A2EB', '#FF6384'],\n  //       },\n  //     ],\n  //   };\n\n  //   setSeverityChartData(data);\n  // }, [issues]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Severity Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"nx+3uOKL4naMwBTxFc6W2wi5vKU=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Pie","jsxDEV","_jsxDEV","Charts","issuesData","_s","severityChartRef","issues","setIssues","severity","priority","severityCounts","Minor","Major","Critical","svKeys","Object","keys","map","issue","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/K/source/bug-ranger/src/components/Charts.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst Charts = ({ issuesData }) => {\r\n\r\n  const severityChartRef = useRef(null);\r\n\r\n  const [issues, setIssues] = useState({\r\n    severity: issuesData.severity,\r\n    priority: issuesData.priority\r\n  })\r\n\r\n  useEffect(()=>{\r\n    const severityCounts = {\r\n          Minor: 0,\r\n          Major: 0,\r\n          Critical: 0,\r\n        };\r\n\r\n        let svKeys = Object.keys(severityCounts)\r\n           \r\n        issues.map(issue => issue[1] === svKeys? severityCounts[issue.severity]++ : severityCounts)\r\n\r\n        console.log(severityCounts)\r\n          // if (issue.severity && severityCounts.hasOwnProperty(issue.severity)) {\r\n\r\n          // let message\r\n          // Object.entries(value).map(x=> \r\n          //   x[1] === \"\" ? message = x[0] : \"\"\r\n          // )     \r\n\r\n          // const editIssue = id =>{\r\n          //   setIssues(issues.map(issue=> issue.id === id ?\r\n          //       {...issue, isEditing: !issue.isEditing}: issue))\r\n          // }\r\n\r\n          // const data = {\r\n          //       labels: Object.keys(severityCounts),\r\n          //       datasets: [\r\n          //         {\r\n          //           data: Object.values(severityCounts),\r\n          //           backgroundColor: ['#FFCE56', '#36A2EB', '#FF6384'],\r\n          //           hoverBackgroundColor: ['#FFCE56', '#36A2EB', '#FF6384'],\r\n          //         },\r\n          //       ],\r\n          //     };\r\n\r\n        console.log(severityCounts.Critical)\r\n  },[issues])\r\n  \r\n  // useEffect(() => {\r\n  //   // Calculate the counts of each severity level\r\n  //   const severityCounts = {\r\n  //     Minor: 0,\r\n  //     Major: 0,\r\n  //     Critical: 0,\r\n  //   };\r\n       \r\n  //   issues.forEach((issue) => {\r\n  //     if (issue.severity && severityCounts.hasOwnProperty(issue.severity)) {\r\n  //       severityCounts[issue.severity]++;\r\n  //     }\r\n  //   });\r\n\r\n  //   // Create data for the Severity Pie Chart\r\n  //   const data = {\r\n  //     labels: Object.keys(severityCounts),\r\n  //     datasets: [\r\n  //       {\r\n  //         data: Object.values(severityCounts),\r\n  //         backgroundColor: ['#FFCE56', '#36A2EB', '#FF6384'],\r\n  //         hoverBackgroundColor: ['#FFCE56', '#36A2EB', '#FF6384'],\r\n  //       },\r\n  //     ],\r\n  //   };\r\n\r\n  //   setSeverityChartData(data);\r\n  // }, [issues]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>Severity Chart</h2>\r\n        {/* {value && <Pie data={value} ref={severityChartRef} />} */}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAEjC,MAAMC,gBAAgB,GAAGR,MAAM,CAAC,IAAI,CAAC;EAErC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC;IACnCU,QAAQ,EAAEL,UAAU,CAACK,QAAQ;IAC7BC,QAAQ,EAAEN,UAAU,CAACM;EACvB,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAI;IACZ,MAAMc,cAAc,GAAG;MACjBC,KAAK,EAAE,CAAC;MACRC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE;IACZ,CAAC;IAED,IAAIC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACN,cAAc,CAAC;IAExCJ,MAAM,CAACW,GAAG,CAACC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKJ,MAAM,GAAEJ,cAAc,CAACQ,KAAK,CAACV,QAAQ,CAAC,EAAE,GAAGE,cAAc,CAAC;IAE3FS,OAAO,CAACC,GAAG,CAACV,cAAc,CAAC;IACzB;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEFS,OAAO,CAACC,GAAG,CAACV,cAAc,CAACG,QAAQ,CAAC;EAC1C,CAAC,EAAC,CAACP,MAAM,CAAC,CAAC;;EAEX;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBACEL,OAAA;IAAAoB,QAAA,eACEpB,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAAAoB,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CArFIF,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AAuFZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}