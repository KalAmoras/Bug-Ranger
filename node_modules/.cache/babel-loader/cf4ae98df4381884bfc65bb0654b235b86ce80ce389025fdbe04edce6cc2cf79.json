{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K\\\\source\\\\bug-ranger\\\\src\\\\components\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport 'chart.js/auto'; // Import 'chart.js/auto' to ensure proper initialization\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = ({\n  issues\n}) => {\n  _s();\n  const [severityCounts, setSeverityCounts] = useState({\n    labels: [],\n    datasets: [{\n      data: [],\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF']\n    }]\n  });\n  // labels: UserData.map((data) => data.year),\n  // datasets: [\n  //   {\n  //     label: \"Users Gained\",\n  //     data: UserData.map((data) => data.userGain)\n  //   },\n  // ],\n  // const chartRef = useRef(null); // Reference to the chart instance\n  // let countKey = Object.keys(counts)\n  // let countValue = Object.keys(counts)\n\n  useEffect(() => {\n    // Function to calculate the severity counts\n    const calculateSeverityCounts = issues => {\n      const counts = {};\n      issues.forEach(issue => {\n        const severity = issue.severity;\n        if (severity) {\n          if (counts[severity]) {\n            counts[severity]++;\n          } else {\n            counts[severity] = 1;\n          }\n        }\n      });\n      return counts;\n    };\n    const counts = calculateSeverityCounts(issues);\n    setSeverityCounts(counts);\n    console.log(counts);\n    console.log(severityCounts);\n    console.log(countKey);\n  }, [issues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"n+Qo6T00Tou6A56UEY8B+dq0N1A=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","ChartJS","Pie","jsxDEV","_jsxDEV","Charts","issues","_s","severityCounts","setSeverityCounts","labels","datasets","data","backgroundColor","calculateSeverityCounts","counts","forEach","issue","severity","console","log","countKey","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/K/source/bug-ranger/src/components/Charts.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport 'chart.js/auto'; // Import 'chart.js/auto' to ensure proper initialization\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst Charts = ({ issues }) => {\r\n  const [severityCounts, setSeverityCounts] = useState({\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          data: [],\r\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\r\n        },\r\n      ],\r\n    });\r\n    // labels: UserData.map((data) => data.year),\r\n    // datasets: [\r\n    //   {\r\n    //     label: \"Users Gained\",\r\n    //     data: UserData.map((data) => data.userGain)\r\n    //   },\r\n    // ],\r\n  // const chartRef = useRef(null); // Reference to the chart instance\r\n  // let countKey = Object.keys(counts)\r\n  // let countValue = Object.keys(counts)\r\n\r\n  useEffect(() => {\r\n    // Function to calculate the severity counts\r\n    const calculateSeverityCounts = (issues) => {\r\n      const counts = {};\r\n      issues.forEach((issue) => {\r\n        const severity = issue.severity;\r\n        if (severity) {\r\n          if (counts[severity]) {\r\n            counts[severity]++;\r\n          } else {\r\n            counts[severity] = 1;\r\n          }\r\n        }\r\n      });\r\n      return counts;\r\n    };\r\n    const counts = calculateSeverityCounts(issues);\r\n    setSeverityCounts(counts);\r\n    console.log(counts);\r\n    console.log(severityCounts)\r\n    console.log(countKey)\r\n    \r\n  }, [issues]);\r\n  \r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>Charts</h2>\r\n        <Pie data={data}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,eAAe,CAAC,CAAC;AACxB,SAASC,KAAK,IAAIC,OAAO,QAAQ,eAAe;AAChD,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC;IACjDW,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;IACzE,CAAC;EAEL,CAAC,CAAC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACF;EACA;EACA;;EAEAhB,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,uBAAuB,GAAIR,MAAM,IAAK;MAC1C,MAAMS,MAAM,GAAG,CAAC,CAAC;MACjBT,MAAM,CAACU,OAAO,CAAEC,KAAK,IAAK;QACxB,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;QAC/B,IAAIA,QAAQ,EAAE;UACZ,IAAIH,MAAM,CAACG,QAAQ,CAAC,EAAE;YACpBH,MAAM,CAACG,QAAQ,CAAC,EAAE;UACpB,CAAC,MAAM;YACLH,MAAM,CAACG,QAAQ,CAAC,GAAG,CAAC;UACtB;QACF;MACF,CAAC,CAAC;MACF,OAAOH,MAAM;IACf,CAAC;IACD,MAAMA,MAAM,GAAGD,uBAAuB,CAACR,MAAM,CAAC;IAC9CG,iBAAiB,CAACM,MAAM,CAAC;IACzBI,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;IACnBI,OAAO,CAACC,GAAG,CAACZ,cAAc,CAAC;IAC3BW,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAEvB,CAAC,EAAE,CAACf,MAAM,CAAC,CAAC;EAIZ,oBACEF,OAAA;IAAAkB,QAAA,eACElB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACftB,OAAA,CAACF,GAAG;QAACU,IAAI,EAAEA;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAvDIF,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AAyDZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}