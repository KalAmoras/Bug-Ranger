{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K\\\\source\\\\bug-ranger\\\\src\\\\components\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport 'chart.js/auto'; // Import 'chart.js/auto' to ensure proper initialization\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = ({\n  issues\n}) => {\n  _s();\n  const [chartData, setchartData] = useState({\n    labels: [],\n    datasets: [{\n      data: [],\n      backgroundColor: ['green', 'red', 'yellow']\n    }]\n  });\n  const calculateSeverity = issues => {\n    const counts = {};\n    issues.forEach(issue => {\n      const severity = issue.severity;\n      if (severity) {\n        if (counts[severity]) {\n          counts[severity]++;\n        } else {\n          counts[severity] = 1;\n        }\n      }\n    });\n    return counts;\n  };\n  const counts = calculateSeverity(issues);\n  console.log(counts);\n  console.log(chartData);\n  useEffect(() => {\n    setchartData({\n      labels: Object.keys(counts),\n      datasets: [{\n        data: Object.values(counts),\n        color: ['red', 'blue', 'green'],\n        backgroundColor: ['#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF']\n      }]\n    });\n  }, [issues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"3jh746pSSy210Dvm6o5BShbkHjs=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","ChartJS","Pie","jsxDEV","_jsxDEV","Charts","issues","_s","chartData","setchartData","labels","datasets","data","backgroundColor","calculateSeverity","counts","forEach","issue","severity","console","log","Object","keys","values","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/K/source/bug-ranger/src/components/Charts.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport 'chart.js/auto'; // Import 'chart.js/auto' to ensure proper initialization\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst Charts = ({ issues }) => {\r\n  const [chartData, setchartData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        data: [],\r\n        backgroundColor: ['green', 'red', 'yellow'],\r\n      },\r\n    ],\r\n  })\r\n\r\n  const calculateSeverity = (issues) => {\r\n    const counts = {};\r\n    issues.forEach((issue) => {\r\n      const severity = issue.severity;\r\n      if (severity) {\r\n        if (counts[severity]) {\r\n          counts[severity]++;\r\n        } else {\r\n          counts[severity] = 1;\r\n        }\r\n      }\r\n    });\r\n    return counts;\r\n  };\r\n  \r\n  const counts = calculateSeverity(issues);\r\n  console.log(counts);\r\n  console.log(chartData)\r\n  \r\n  useEffect(() => {\r\n    \r\n    setchartData({\r\n      labels: Object.keys(counts),\r\n      datasets: [\r\n        {\r\n          data: Object.values(counts),\r\n          color: ['red', 'blue', 'green'],\r\n          backgroundColor: [ '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\r\n        },\r\n      ],\r\n    });\r\n  }, [issues]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>Charts</h2>\r\n        <Pie data={chartData}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,eAAe,CAAC,CAAC;AACxB,SAASC,KAAK,IAAIC,OAAO,QAAQ,eAAe;AAChD,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IACzCW,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ;IAC5C,CAAC;EAEL,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIR,MAAM,IAAK;IACpC,MAAMS,MAAM,GAAG,CAAC,CAAC;IACjBT,MAAM,CAACU,OAAO,CAAEC,KAAK,IAAK;MACxB,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;MAC/B,IAAIA,QAAQ,EAAE;QACZ,IAAIH,MAAM,CAACG,QAAQ,CAAC,EAAE;UACpBH,MAAM,CAACG,QAAQ,CAAC,EAAE;QACpB,CAAC,MAAM;UACLH,MAAM,CAACG,QAAQ,CAAC,GAAG,CAAC;QACtB;MACF;IACF,CAAC,CAAC;IACF,OAAOH,MAAM;EACf,CAAC;EAED,MAAMA,MAAM,GAAGD,iBAAiB,CAACR,MAAM,CAAC;EACxCa,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;EACnBI,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;EAEtBX,SAAS,CAAC,MAAM;IAEdY,YAAY,CAAC;MACXC,MAAM,EAAEW,MAAM,CAACC,IAAI,CAACP,MAAM,CAAC;MAC3BJ,QAAQ,EAAE,CACR;QACEC,IAAI,EAAES,MAAM,CAACE,MAAM,CAACR,MAAM,CAAC;QAC3BS,KAAK,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC;QAC/BX,eAAe,EAAE,CAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;MAC/D,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAAqB,QAAA,eACErB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfzB,OAAA,CAACF,GAAG;QAACU,IAAI,EAAEJ;MAAU;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CApDIF,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAsDZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}