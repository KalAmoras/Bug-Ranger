{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K\\\\source\\\\todo-two\\\\src\\\\components\\\\TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoForm = _ref => {\n  _s();\n  let {\n    addTodo\n  } = _ref;\n  const [input, setInput] = useState({\n    task: \"\",\n    line: \"\"\n  });\n  const [value, setValue] = useState(\"\");\n  const handleChange = e => {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value\n    });\n    console.log(\"changed\");\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value) {\n      addTodo(value);\n      console.log(\"submit\");\n      setValue(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"TodoForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"task\",\n      className: \"todo-input\",\n      value: value.task,\n      placeholder: \"Bug\"\n      /*onChange={e=> setValue(e.target.value)}*/,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"line\",\n      className: \"todo-input\",\n      value: value.line,\n      placeholder: \"Line\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"todo-btn\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"ZABzXCWnez2Fo2UozUvsKcmlNd0=\");\n_c = TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","_ref","_s","addTodo","input","setInput","task","line","value","setValue","handleChange","e","target","name","console","log","handleSubmit","preventDefault","className","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/K/source/todo-two/src/components/TodoForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const TodoForm = ({addTodo}) => {\r\n    \r\n    const[input, setInput] = useState({\r\n      task: \"\",\r\n      line: \"\"\r\n    })\r\n \r\n\r\n    const [value, setValue] = useState(\"\")\r\n\r\n    const handleChange = e =>{\r\n        setInput({...input, \r\n          [e.target.name]: e.target.value})\r\n          console.log(\"changed\")\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n\r\n        if(value){\r\n            addTodo(value)\r\n            console.log(\"submit\")\r\n            setValue(\"\")\r\n        }\r\n    }\r\n \r\n  return (\r\n    <form className='TodoForm' onSubmit={handleSubmit}>\r\n        <input type='text'\r\n        name='task'\r\n        className='todo-input'\r\n        value={value.task}\r\n        placeholder='Bug' \r\n        /*onChange={e=> setValue(e.target.value)}*/\r\n        onChange={(handleChange)}\r\n\r\n        />\r\n        <input type='text'\r\n        name='line'\r\n        className='todo-input'\r\n        value={value.line}\r\n        placeholder='Line' \r\n        onChange={handleChange}\r\n        />             \r\n        <button type='submit' className='todo-btn'>Add Task</button>\r\n    </form>\r\n  )\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,QAAQ,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAACC;EAAO,CAAC,GAAAF,IAAA;EAE9B,MAAK,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC;IAChCS,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE;EACR,CAAC,CAAC;EAGF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,YAAY,GAAGC,CAAC,IAAG;IACrBN,QAAQ,CAAC;MAAC,GAAGD,KAAK;MAChB,CAACO,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACJ;IAAK,CAAC,CAAC;IACjCM,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAGL,CAAC,IAAG;IACrBA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,IAAGT,KAAK,EAAC;MACLL,OAAO,CAACK,KAAK,CAAC;MACdM,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBN,QAAQ,CAAC,EAAE,CAAC;IAChB;EACJ,CAAC;EAEH,oBACEV,OAAA;IAAMmB,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC9CrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAClBR,IAAI,EAAC,MAAM;MACXK,SAAS,EAAC,YAAY;MACtBV,KAAK,EAAEA,KAAK,CAACF,IAAK;MAClBgB,WAAW,EAAC;MACZ;MACAC,QAAQ,EAAGb;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExB,CAAC,eACF5B,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAClBR,IAAI,EAAC,MAAM;MACXK,SAAS,EAAC,YAAY;MACtBV,KAAK,EAAEA,KAAK,CAACD,IAAK;MAClBe,WAAW,EAAC,MAAM;MAClBC,QAAQ,EAAEb;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACF5B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAACH,SAAS,EAAC,UAAU;MAAAE,QAAA,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEX,CAAC;AAAAzB,EAAA,CA/CYF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}