{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K\\\\source\\\\bug-ranger\\\\src\\\\components\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = ({\n  issues\n}) => {\n  _s();\n  const [severityCounts, setSeverityCounts] = useState({});\n  useEffect(() => {\n    // Function to calculate the severity counts\n    const calculateSeverityCounts = issues => {\n      const counts = {};\n      issues.forEach(issue => {\n        const severity = issue.severity;\n        if (severity) {\n          if (counts[severity]) {\n            counts[severity]++;\n          } else {\n            counts[severity] = 1;\n          }\n        }\n      });\n      return counts;\n    };\n\n    // Calculate the severity counts when issues prop changes\n    const counts = calculateSeverityCounts(issues);\n\n    // Update the severity counts state\n    setSeverityCounts(counts);\n\n    // Log the severity counts (optional)\n    console.log(counts);\n\n    // You can use severityCounts in your charts here\n  }, [issues]);\n\n  // Convert the severityCounts object into arrays for data and labels\n  const severityLabels = Object.keys(severityCounts);\n  const severityData = Object.values(severityCounts);\n\n  // Define the data for the Severity Pie Chart\n  const severityChartData = {\n    labels: severityLabels,\n    datasets: [{\n      data: severityData,\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\n      hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: severityChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"6B9Vihp1GNiQhrnB/+PiDwBXYko=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Pie","jsxDEV","_jsxDEV","Charts","issues","_s","severityCounts","setSeverityCounts","calculateSeverityCounts","counts","forEach","issue","severity","console","log","severityLabels","Object","keys","severityData","values","severityChartData","labels","datasets","data","backgroundColor","hoverBackgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/K/source/bug-ranger/src/components/Charts.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst Charts = ({ issues }) => {\r\n  \r\n  const [severityCounts, setSeverityCounts] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Function to calculate the severity counts\r\n    const calculateSeverityCounts = (issues) => {\r\n      const counts = {};\r\n      issues.forEach((issue) => {\r\n        const severity = issue.severity;\r\n        if (severity) {\r\n          if (counts[severity]) {\r\n            counts[severity]++;\r\n          } else {\r\n            counts[severity] = 1;\r\n          }\r\n        }\r\n      });\r\n      return counts;\r\n    };\r\n\r\n    // Calculate the severity counts when issues prop changes\r\n    const counts = calculateSeverityCounts(issues);\r\n\r\n    // Update the severity counts state\r\n    setSeverityCounts(counts);\r\n\r\n    // Log the severity counts (optional)\r\n    console.log(counts);\r\n\r\n    // You can use severityCounts in your charts here\r\n  }, [issues]);\r\n\r\n  // Convert the severityCounts object into arrays for data and labels\r\n  const severityLabels = Object.keys(severityCounts);\r\n  const severityData = Object.values(severityCounts);\r\n\r\n  // Define the data for the Severity Pie Chart\r\n  const severityChartData = {\r\n    labels: severityLabels,\r\n    datasets: [\r\n      {\r\n        data: severityData,\r\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\r\n        hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>Charts</h2>\r\n        <Pie data={severityChartData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAE7B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExDF,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,uBAAuB,GAAIJ,MAAM,IAAK;MAC1C,MAAMK,MAAM,GAAG,CAAC,CAAC;MACjBL,MAAM,CAACM,OAAO,CAAEC,KAAK,IAAK;QACxB,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;QAC/B,IAAIA,QAAQ,EAAE;UACZ,IAAIH,MAAM,CAACG,QAAQ,CAAC,EAAE;YACpBH,MAAM,CAACG,QAAQ,CAAC,EAAE;UACpB,CAAC,MAAM;YACLH,MAAM,CAACG,QAAQ,CAAC,GAAG,CAAC;UACtB;QACF;MACF,CAAC,CAAC;MACF,OAAOH,MAAM;IACf,CAAC;;IAED;IACA,MAAMA,MAAM,GAAGD,uBAAuB,CAACJ,MAAM,CAAC;;IAE9C;IACAG,iBAAiB,CAACE,MAAM,CAAC;;IAEzB;IACAI,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;;IAEnB;EACF,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMW,cAAc,GAAGC,MAAM,CAACC,IAAI,CAACX,cAAc,CAAC;EAClD,MAAMY,YAAY,GAAGF,MAAM,CAACG,MAAM,CAACb,cAAc,CAAC;;EAElD;EACA,MAAMc,iBAAiB,GAAG;IACxBC,MAAM,EAAEN,cAAc;IACtBO,QAAQ,EAAE,CACR;MACEC,IAAI,EAAEL,YAAY;MAClBM,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;MACxEC,oBAAoB,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;IAC9E,CAAC;EAEL,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,eACExB,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf5B,OAAA,CAACF,GAAG;QAACuB,IAAI,EAAEH;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CAzDIF,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AA2DZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}