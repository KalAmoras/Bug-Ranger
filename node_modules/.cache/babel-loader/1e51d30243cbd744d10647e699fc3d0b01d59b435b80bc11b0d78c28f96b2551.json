{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K\\\\source\\\\todo-two\\\\src\\\\components\\\\TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoForm = _ref => {\n  _s();\n  let {\n    addTodo\n  } = _ref;\n  /* const[input, setInput] = useState({\r\n     task: \"\",\r\n     line: \"\"\r\n   })*/\n\n  const [value, setValue] = useState({\n    task: \"\",\n    line: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValue(prevVal => ({\n      ...prevVal,\n      [name]: value\n    }));\n    console.log({\n      [name]: value\n    });\n    console.log(value.task);\n    console.log(value.line);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      task,\n      line\n    } = value;\n    if (value) {\n      addTodo(task, line);\n      console.log(\"submit\");\n      setValue(\"\");\n    }\n    setValue(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"TodoForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"task\",\n      className: \"todo-input\",\n      value: value.task,\n      placeholder: \"Bug\"\n      //onChange={e=> setValue(e.target.value)}\n      ,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"line\",\n      className: \"todo-input\",\n      value: value.line,\n      placeholder: \"Line\"\n      //onChange={e=> setValue(e.target.value)}\n      ,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"todo-btn\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"FT+Gh2gzSMPkKnx4H2ag4pPuQ6g=\");\n_c = TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","_ref","_s","addTodo","value","setValue","task","line","handleChange","e","name","target","prevVal","console","log","handleSubmit","preventDefault","className","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/K/source/todo-two/src/components/TodoForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const TodoForm = ({addTodo}) => {\r\n    \r\n   /* const[input, setInput] = useState({\r\n      task: \"\",\r\n      line: \"\"\r\n    })*/\r\n \r\n\r\n    const [value, setValue] = useState({\r\n      task: \"\",\r\n      line: \"\"\r\n    })\r\n\r\n    const handleChange = e =>{\r\n        \r\n      const { name, value } = e.target           \r\n\r\n        setValue((prevVal) => ({\r\n          ...prevVal,\r\n          [name]: value\r\n        }))\r\n         \r\n        console.log({[name]:value})\r\n        console.log(value.task)\r\n        console.log(value.line)\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n\r\n        const { task, line } = value\r\n\r\n        if(value){\r\n            addTodo(task, line)\r\n            console.log(\"submit\")\r\n            setValue(\"\")\r\n        }\r\n\r\n        setValue(\"\")\r\n    }\r\n \r\n  return (\r\n    <form className='TodoForm' onSubmit={handleSubmit}>\r\n        <input type='text'\r\n        name='task'\r\n        className='todo-input'\r\n        value={value.task}\r\n        placeholder='Bug' \r\n        //onChange={e=> setValue(e.target.value)}\r\n        onChange={handleChange}\r\n\r\n        />\r\n        <input type='text'\r\n        name='line'\r\n        className='todo-input'\r\n        value={value.line}\r\n        placeholder='Line' \r\n        //onChange={e=> setValue(e.target.value)}\r\n        onChange={handleChange}\r\n        />             \r\n        <button type='submit' className='todo-btn'>Add Task</button>\r\n    </form>\r\n  )\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,QAAQ,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAACC;EAAO,CAAC,GAAAF,IAAA;EAE/B;AACH;AACA;AACA;;EAGI,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC;IACjCS,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGC,CAAC,IAAG;IAEvB,MAAM;MAAEC,IAAI;MAAEN;IAAM,CAAC,GAAGK,CAAC,CAACE,MAAM;IAE9BN,QAAQ,CAAEO,OAAO,KAAM;MACrB,GAAGA,OAAO;MACV,CAACF,IAAI,GAAGN;IACV,CAAC,CAAC,CAAC;IAEHS,OAAO,CAACC,GAAG,CAAC;MAAC,CAACJ,IAAI,GAAEN;IAAK,CAAC,CAAC;IAC3BS,OAAO,CAACC,GAAG,CAACV,KAAK,CAACE,IAAI,CAAC;IACvBO,OAAO,CAACC,GAAG,CAACV,KAAK,CAACG,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMQ,YAAY,GAAGN,CAAC,IAAG;IACrBA,CAAC,CAACO,cAAc,CAAC,CAAC;IAElB,MAAM;MAAEV,IAAI;MAAEC;IAAK,CAAC,GAAGH,KAAK;IAE5B,IAAGA,KAAK,EAAC;MACLD,OAAO,CAACG,IAAI,EAAEC,IAAI,CAAC;MACnBM,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBT,QAAQ,CAAC,EAAE,CAAC;IAChB;IAEAA,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAEH,oBACEN,OAAA;IAAMkB,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC9CpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAClBV,IAAI,EAAC,MAAM;MACXO,SAAS,EAAC,YAAY;MACtBb,KAAK,EAAEA,KAAK,CAACE,IAAK;MAClBe,WAAW,EAAC;MACZ;MAAA;MACAC,QAAQ,EAAEd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtB,CAAC,eACF3B,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAClBV,IAAI,EAAC,MAAM;MACXO,SAAS,EAAC,YAAY;MACtBb,KAAK,EAAEA,KAAK,CAACG,IAAK;MAClBc,WAAW,EAAC;MACZ;MAAA;MACAC,QAAQ,EAAEd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACF3B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAACH,SAAS,EAAC,UAAU;MAAAE,QAAA,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEX,CAAC;AAAAxB,EAAA,CA/DYF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}