{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K\\\\source\\\\bug-ranger\\\\src\\\\components\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport 'chart.js/auto'; // Import 'chart.js/auto' to ensure proper initialization\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = ({\n  issues\n}) => {\n  _s();\n  const [severityData, setSeverityData] = useState({\n    labels: [],\n    datasets: [{\n      data: [],\n      backgroundColor: ['green', 'red', 'yellow']\n    }]\n  });\n  const [priorityData, setPriorityData] = useState({\n    labels: [],\n    datasets: [{\n      data: [],\n      backgroundColor: ['green', 'red', 'yellow']\n    }]\n  });\n  const calculateSeverity = issues => {\n    const severityCounts = {};\n    issues.forEach(issue => {\n      const severity = issue.severity;\n      if (severity) {\n        if (severityCounts[severity]) {\n          severityCounts[severity]++;\n        } else {\n          severityCounts[severity] = 1;\n        }\n      }\n    });\n    return severityCounts;\n  };\n  const severityCounts = calculateSeverity(issues);\n  console.log(severityCounts);\n  console.log(severityData);\n  const calculatePriority = issues => {\n    const priorityCounts = {};\n    issues.forEach(issue => {\n      const priority = issue.priority;\n      if (priority) {\n        if (priorityCounts[priority]) {\n          priorityCounts[priority]++;\n        } else {\n          priorityCounts[priority] = 1;\n        }\n      }\n    });\n    return priorityCounts;\n  };\n  const priorityCounts = calculatePriority(issues);\n  useEffect(() => {\n    setSeverityData({\n      labels: Object.keys(severityCounts),\n      datasets: [{\n        data: Object.values(severityCounts),\n        color: ['red', 'blue', 'green'],\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF']\n      }]\n    });\n    setPriorityData({\n      labels: Object.keys(priorityCounts),\n      datasets: [{\n        data: Object.values(priorityCounts),\n        color: ['red', 'blue', 'green'],\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF']\n      }]\n    });\n  }, [issues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Severity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: severityData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: priorityCounts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"JuMSsKJbNYNxsOEpdDmehxm/frU=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","ChartJS","Pie","jsxDEV","_jsxDEV","Charts","issues","_s","severityData","setSeverityData","labels","datasets","data","backgroundColor","priorityData","setPriorityData","calculateSeverity","severityCounts","forEach","issue","severity","console","log","calculatePriority","priorityCounts","priority","Object","keys","values","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/K/source/bug-ranger/src/components/Charts.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport 'chart.js/auto'; // Import 'chart.js/auto' to ensure proper initialization\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst Charts = ({ issues }) => {\r\n  const [severityData, setSeverityData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        data: [],\r\n        backgroundColor: ['green', 'red', 'yellow'],\r\n      },\r\n    ],\r\n  })\r\n\r\n  const [priorityData, setPriorityData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        data: [],\r\n        backgroundColor: ['green', 'red', 'yellow'],\r\n      },\r\n    ],\r\n  })\r\n\r\n  const calculateSeverity = (issues) => {\r\n    const severityCounts = {};\r\n    issues.forEach((issue) => {\r\n      const severity = issue.severity;\r\n      if (severity) {\r\n        if (severityCounts[severity]) {\r\n          severityCounts[severity]++;\r\n        } else {\r\n          severityCounts[severity] = 1;\r\n        }\r\n      }\r\n    });\r\n    return severityCounts;\r\n  };\r\n  \r\n  const severityCounts = calculateSeverity(issues);\r\n  console.log(severityCounts);\r\n  console.log(severityData)\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  const calculatePriority = (issues) => {\r\n    const priorityCounts = {};\r\n    issues.forEach((issue) => {\r\n      const priority = issue.priority;\r\n      if (priority) {\r\n        if (priorityCounts[priority]) {\r\n          priorityCounts[priority]++;\r\n        } else {\r\n          priorityCounts[priority] = 1;\r\n        }\r\n      }\r\n    });\r\n    return priorityCounts;\r\n  };\r\n  const priorityCounts = calculatePriority(issues);\r\n  \r\n  useEffect(() => {\r\n    setSeverityData({\r\n      labels: Object.keys(severityCounts),\r\n      datasets: [\r\n        {\r\n          data: Object.values(severityCounts),\r\n          color: ['red', 'blue', 'green'],\r\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\r\n        },\r\n      ],\r\n    });\r\n\r\n    setPriorityData({\r\n      labels: Object.keys(priorityCounts),\r\n      datasets: [\r\n        {\r\n          data: Object.values(priorityCounts),\r\n          color: ['red', 'blue', 'green'],\r\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\r\n        },\r\n      ],\r\n    });\r\n  }, [issues]);\r\n  \r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Charts</h1>\r\n        <h2>Severity</h2>\r\n        <Pie data={severityData}/>\r\n        <Pie data={priorityCounts}/>\r\n        <h2>Priority</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}